{"ast":null,"code":"var _jsxFileName = \"/Users/nerajno/Learning:Git_Projects/Udemy_Courses/MaxReact/exercises_downloaded/Section7/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\nimport Radium, { StyleRoot } from \"radium\";\nimport ErrorBoundary from \"./ErrorBoundary/ErrorBoundary\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: \"hjgf\",\n        name: \"Max\",\n        age: 28\n      }, {\n        id: \"iouy\",\n        name: \"Manu\",\n        age: 28\n      }, {\n        id: \"nbbvc\",\n        name: \"Stephanie\",\n        age: 26\n      }],\n      otherState: \"Some other state\",\n      showPersons: false\n    };\n\n    this.nameChangeHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      };\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons;\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"green\",\n      color: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\",\n      \":hover\": {\n        backgroundColor: \"lightgreen\",\n        color: \"black\"\n      }\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, this.state.persons.map((person, index) => {\n        return /*#__PURE__*/React.createElement(ErrorBoundary, {\n          key: person.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Person, {\n          name: person.name,\n          age: person.age,\n          click: () => this.deletePersonHandler(index),\n          changed: event => this.nameChangeHandler(event, person.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }\n        }));\n      }));\n      style.backgroundColor = \"red\";\n      style[\":hover\"] = {\n        backgroundColor: \"salmon\",\n        color: \"black\"\n      };\n    }\n\n    let classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push(\"red\"); // classes = ['red'];\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push(\"bold\"); // classes = ['red', 'bold'];\n    }\n\n    return /*#__PURE__*/React.createElement(StyleRoot, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Hi I'm React app\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.join(\" \"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"This is really working\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.togglePersonsHandler,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Toggle Persons\"), persons));\n  }\n\n}\n\nexport default Radium(App);","map":{"version":3,"sources":["/Users/nerajno/Learning:Git_Projects/Udemy_Courses/MaxReact/exercises_downloaded/Section7/src/App.js"],"names":["React","Person","Radium","StyleRoot","ErrorBoundary","App","Component","state","persons","id","name","age","otherState","showPersons","nameChangeHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","render","style","backgroundColor","color","font","border","padding","cursor","map","index","classes","length","push","join"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\nimport Radium, { StyleRoot } from \"radium\";\nimport ErrorBoundary from \"./ErrorBoundary/ErrorBoundary\";\n\nclass App extends React.Component {\n  state = {\n    persons: [\n      { id: \"hjgf\", name: \"Max\", age: 28 },\n      { id: \"iouy\", name: \"Manu\", age: 28 },\n      { id: \"nbbvc\", name: \"Stephanie\", age: 26 }\n    ],\n    otherState: \"Some other state\",\n    showPersons: false\n  };\n\n  nameChangeHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n    const person = { ...this.state.persons[personIndex] };\n    person.name = event.target.value;\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n    this.setState({\n      persons: persons\n    });\n  };\n\n  deletePersonHandler = personIndex => {\n    // const persons = this.state.persons;\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({\n      persons: persons\n    });\n  };\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({\n      showPersons: !doesShow\n    });\n  };\n\n  render() {\n    const style = {\n      backgroundColor: \"green\",\n      color: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\",\n      \":hover\": {\n        backgroundColor: \"lightgreen\",\n        color: \"black\"\n      }\n    };\n\n    let persons = null;\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return (\n              <ErrorBoundary key={person.id}>\n                <Person\n                  name={person.name}\n                  age={person.age}\n                  click={() => this.deletePersonHandler(index)}\n                  changed={event => this.nameChangeHandler(event, person.id)}\n                />\n              </ErrorBoundary>\n            );\n          })}\n        </div>\n      );\n      style.backgroundColor = \"red\";\n      style[\":hover\"] = {\n        backgroundColor: \"salmon\",\n        color: \"black\"\n      };\n    }\n\n    let classes = [];\n    if (this.state.persons.length <= 2) {\n      classes.push(\"red\"); // classes = ['red'];\n    }\n    if (this.state.persons.length <= 1) {\n      classes.push(\"bold\"); // classes = ['red', 'bold'];\n    }\n\n    return (\n      <StyleRoot>\n        <div className=\"App\">\n          <h1>Hi I'm React app</h1>\n          <p className={classes.join(\" \")}>This is really working</p>\n          <button onClick={this.togglePersonsHandler} style={style}>\n            Toggle Persons\n          </button>\n          {persons}\n        </div>\n      </StyleRoot>\n    );\n  }\n}\n\nexport default Radium(App);\n"]},"metadata":{},"sourceType":"module"}