{"ast":null,"code":"var _jsxFileName = \"/Users/nerajno/Learning:Git_Projects/Udemy_Courses/MaxReact/exercises_downloaded/Section5/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: \"eej\",\n        name: 'Max',\n        age: 28\n      }, {\n        id: \"ghwr\",\n        name: 'Manu',\n        age: 29\n      }, {\n        id: \"rgwg\",\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      };\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      // or \n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      color: \"white\",\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      }));\n      style.backgroundColor = \"red\";\n    }\n\n    const classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push('red');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Hi, I'm a React App\"), React.createElement(\"p\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"This is really working!\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Toggle Button\"), persons); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nerajno/Learning:Git_Projects/Udemy_Courses/MaxReact/exercises_downloaded/Section5/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","render","style","backgroundColor","color","font","border","padding","cursor","map","index","classes","length","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: \"eej\", name: 'Max', age: 28 },\n      { id: \"ghwr\", name: 'Manu', age: 29 },\n      { id: \"rgwg\", name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    showPersons : false\n  } \n\n  nameChangedHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex( p =>{\n       return p.id === id;\n    });\n\n    const person = {...this.state.persons[personIndex]};\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState( {\n      persons: persons\n    } );\n  }\n\n  deletePersonHandler = (personIndex) => {\n    // const persons = this.state.persons.slice();\n    // or \n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons}); \n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n  render () {\n    const style = {\n      backgroundColor: 'green',\n      color: \"white\",\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    let persons = null;\n\n    if( this.state.showPersons ){\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return <Person \n                      click = {() => this.deletePersonHandler(index)}\n                      name={person.name }\n                      age={person.age}\n                      key={person.id} \n                      changed={(event) => this.nameChangedHandler(event, person.id)} />\n          })}\n          </div> \n      );\n\n      style.backgroundColor = \"red\";\n    }\n     \n    const classes = [];\n    if (this.state.persons.length <= 2) {\n      classes.push('red')\n    }\n\n    return (\n      <div className=\"App\"> \n        <h1>Hi, I'm a React App</h1>\n        <p className={classes}>This is really working!</p>\n        <button \n          style={style}\n          onClick={this.togglePersonsHandler}>Toggle Button</button>\n          {persons}\n      </div>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}