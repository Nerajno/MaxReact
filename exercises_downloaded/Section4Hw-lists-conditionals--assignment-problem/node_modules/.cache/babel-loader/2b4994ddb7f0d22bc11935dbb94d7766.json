{"ast":null,"code":"var _jsxFileName = \"/Users/nerajno/Learning:Git_Projects/Udemy_Courses/Max_React/Section4Hw-lists-conditionals--assignment-problem/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Validation from './Components/Validation';\nimport Char from './Components/CharComponent';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: ''\n    };\n\n    this.inputChangedHandler = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n    };\n\n    this.deleteCharHandler = event => {};\n  }\n\n  render() {\n    const charList = this.state.userInput.split(\"\").map((ch, index) => {\n      return React.createElement(Char, {\n        character: ch,\n        key: index,\n        cl: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Create a new component (=> ValidationComponent) which receives the text length as a prop\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Inside the ValidationComponent, either output \\\"Text too short\\\" or \\\"Text long enough\\\" depending on the text length (e.g. take 5 as a minimum length)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"When you click a CharComponent, it should be removed from the entered text.\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Hint: Keep in mind that JavaScript strings are basically arrays!\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.inputChangedHandler,\n      value: this.state.userInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.userInput), React.createElement(Validation, {\n      inputLength: this.state.userInput.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), charList);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nerajno/Learning:Git_Projects/Udemy_Courses/Max_React/Section4Hw-lists-conditionals--assignment-problem/src/App.js"],"names":["React","Component","Validation","Char","App","state","userInput","inputChangedHandler","event","setState","target","value","deleteCharHandler","render","charList","split","map","ch","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAwB,yBAAxB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBI,KADwB,GAChB;AACNC,MAAAA,SAAS,EAAC;AADJ,KADgB;;AAAA,SAK1BC,mBAL0B,GAKHC,KAAD,IAAW;AAC3B,WAAKC,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACH,KAPuB;;AAAA,SAS1BC,iBAT0B,GASLJ,KAAD,IAAW,CAE9B,CAXyB;AAAA;;AAa1BK,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKT,KAAL,CAAWC,SAAX,CAAqBS,KAArB,CAA2B,EAA3B,EAA+BC,GAA/B,CAAmC,CAACC,EAAD,EAAKC,KAAL,KAAe;AACjE,aAAO,oBAAE,IAAF;AACG,QAAA,SAAS,EAAED,EADd;AAEG,QAAA,GAAG,EAAEC,KAFR;AAGG,QAAA,EAAE,MAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAID,KALgB,CAAjB;AAOA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sJADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iKAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yLAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0JALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFANF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,QAAQ,EAAE,KAAKX,mBAFf;AAGA,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAeF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWC,SAAf,CAfE,EAgBF,oBAAC,UAAD;AAAa,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,SAAX,CAAqBa,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBE,EAiBDL,QAjBC,CADF;AAqBD;;AA1CyB;;AA6C5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Validation  from './Components/Validation';\nimport Char from './Components/CharComponent';\n\nclass App extends Component {\n    state = {\n      userInput:''\n    }\n\n  inputChangedHandler = (event) => {\n        this.setState({userInput: event.target.value});\n    }\n\n  deleteCharHandler = (event) => {\n\n  }\n\n  render() {\n    const charList = this.state.userInput.split(\"\").map((ch, index) => {\n      return < Char \n                character={ch} \n                key={index} \n                cl/>;\n    });\n\n    return (\n      <div className=\"App\">\n        <ol>\n          <li>Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).</li>\n          <li>Create a new component (=> ValidationComponent) which receives the text length as a prop</li>\n          <li>Inside the ValidationComponent, either output \"Text too short\" or \"Text long enough\" depending on the text length (e.g. take 5 as a minimum length)</li>\n          <li>Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).</li>\n          <li>Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.</li>\n          <li>When you click a CharComponent, it should be removed from the entered text.</li>\n        </ol>\n        <p>Hint: Keep in mind that JavaScript strings are basically arrays!</p>\n        <hr />\n        <input \n        type=\"text\" \n        onChange={this.inputChangedHandler}\n        value={this.state.userInput} />\n    <p>{this.state.userInput}</p>\n    <Validation  inputLength={this.state.userInput.length}/>\n    {charList}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}